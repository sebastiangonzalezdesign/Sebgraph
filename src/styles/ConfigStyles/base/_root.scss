@use '../abstracts/' as *;

//:root {
//    // Loop through the color map and set custom properties
//    @each $color, $shade-map in $active-theme {
//        @each $shade, $value in $shade-map {
//            --#{$color}-#{$shade}: #{$value};
//        }
//    }
//
//    @media (prefers-color-scheme: dark) {
//        @each $color, $shade-map in $dark {
//            @each $shade, $value in $shade-map {
//                --#{$color}-#{$shade}: #{$value};
//            }
//        }
//    }
//
//    // Loop through the font sizes for the 'small' screen size
//    @each $screen-size, $size-map in $font-sizes {
//        @if $screen-size == small {
//            @each $size-name, $size-value in $size-map {
//                --fs-#{$size-name}: #{$size-value};
//            }
//        } @else {
//            // Use media queries for other screen sizes
//            @include mq($screen-size) {
//                @each $size-name, $size-value in $size-map {
//                    --fs-#{$size-name}: #{$size-value};
//                }
//            }
//        }
//    }
//}
//

:root {
    // Loop through the color map for light theme and set custom properties
    @each $color, $shade-map in $active-theme {
        @each $shade, $value in $shade-map {
            --#{$color}-#{$shade}: #{$value};
        }
    }

    // Loop through the font sizes for the 'small' screen size
    @each $screen-size, $size-map in $font-sizes {
        @if $screen-size == small {
            @each $size-name, $size-value in $size-map {
                --fs-#{$size-name}: #{$size-value};
            }
        } @else {
            // Use media queries for other screen sizes
            @include mq($screen-size) {
                @each $size-name, $size-value in $size-map {
                    --fs-#{$size-name}: #{$size-value};
                }
            }
        }
    }
}

body[data-theme='light'] {
    @each $color, $shade-map in $light {
        @each $shade, $value in $shade-map {
            --#{$color}-#{$shade}: #{$value};
        }
    }
}

body[data-theme='dark'] {
    @each $color, $shade-map in $dark {
        @each $shade, $value in $shade-map {
            --#{$color}-#{$shade}: #{$value};
        }
    }
}

// Styles for dark mode using the data-theme attribute on body
//:root[data-theme='dark'] {
//    @each $color, $shade-map in $dark {
//        @each $shade, $value in $shade-map {
//            --#{$color}-#{$shade}: #{$value};
//        }
//    }
//}
//
//// Optional: If you still want to respect the user's system preference for dark mode
//@media (prefers-color-scheme: dark) {
//    :root:not([data-theme='light']) {
//        @each $color, $shade-map in $dark {
//            @each $shade, $value in $shade-map {
//                --#{$color}-#{$shade}: #{$value};
//            }
//        }
//    }
//}
